buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

apply plugin: 'forge'

version = "1.1-"+System.getenv("BUILD_NUMBER")
group= "com.bymarcin.zettaindustries" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "zettaindustries"

file "build.properties" withReader {
    def prop = new Properties()
    prop.load(it)
    ext.config = new ConfigSlurper().parse prop
}


sourceSets{
	api{
		java {
			srcDir 'src/api/java'
		}
		resources {
			srcDir 'src/api/resources'
		}
	}
	main {
		compileClasspath += api.output
		runtimeClasspath += api.output
	}
}


minecraft {
    version = "1.7.10-10.13.4.1470-1.7.10"
	if (file('../run').exists()){
		assetDir = "../run/assets"
	}else{
		assetDir = "assets"
	}
}

configurations {
    provided
    embedded
    compile.extendsFrom provided, embedded
}

repositories {
	maven {
		name = "OC repo"
		url = "http://maven.cil.li/"
	}

    maven {
        name = "ic2, forestry"
        url = "http://maven.ic2.player.to/"
    }
	
    ivy {
        name "BuildCraft"
        artifactPattern "http://www.mod-buildcraft.com/releases/BuildCraft/[revision]/[module]-[revision]-[classifier].[ext]"
    }
	
	ivy {
        name 'CoFHLib'
        artifactPattern "http://addons-origin.cursecdn.com/files/${config.cofhlib.cf}/[module]-[revision].[ext]"
    }
	
	ivy {
        name 'StargateTech2'
        artifactPattern "http://addons-origin.cursecdn.com/files/${config.stargatetech.cf}/[module]-[revision].[ext]"
    }
	
	ivy {
        name 'Immersive Engineering'
        artifactPattern "http://addons-origin.cursecdn.com/files/${config.immersiveengineering.cf}/[module]-[revision]-[classifier].[ext]"
    }
    
    ivy {
        name 'MineTweaker3'
        artifactPattern "http://addons-origin.cursecdn.com/files/${config.minetweaker3.cf}/[module]-[revision].[ext]"
    }
	
	ivy {
        name 'ComputerCraft'
        artifactPattern "http://addons-origin.cursecdn.com/files/${config.cc.cf}/[module][revision].[ext]"
    }
}

dependencies {
	compile name: "buildcraft", version: "${config.buildcraft.version}", classifier: "dev"
	compile "net.sengir.forestry:forestry_1.7.10:${config.forestry.version}:dev"
	compile "li.cil.oc:OpenComputers:${config.oc.version}:dev"
	compile name: 'CoFHLib', version: config.cofhlib.version, ext: 'jar'
	compile name: 'StargateTech2', version: config.stargatetech.version, ext: 'jar'
	compile name: 'ImmersiveEngineering', version: config.immersiveengineering.version, classifier: 'deobf', ext: 'jar'
	compile name: 'MineTweaker3', version: config.minetweaker3.version, ext: 'jar'
	compile name: 'ComputerCraft', version: config.cc.version, ext: 'jar'
}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}
